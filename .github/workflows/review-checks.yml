name: "Review on Push"

permissions:
  contents: read
  security-events: write
  pull-requests: write
  issues: write

on:
  push:
    paths:
      - 'site-metrics-angular/**'
      - 'site-metrics-springboot/**'
      - 'form_etl/**'
      - '.github/workflows/**'
      - 'docker-compose.yml'
  pull_request:
    paths:
      - 'site-metrics-angular/**'
      - 'site-metrics-springboot/**'
      - 'form_etl/**'
      - '.github/workflows/**'
      - 'docker-compose.yml'
concurrency:
  group: review-checks-${{ github.ref }}
  cancel-in-progress: true
jobs:
  # -------------------------------------------------------------
  #  Angular Lint
  # -------------------------------------------------------------
  lint-angular:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: site-metrics-angular
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: site-metrics-angular/package-lock.json

      - name: Install and Lint Angular
        run: |
          npm ci
          npx ng lint

  # -------------------------------------------------------------
  #  Spring Boot Lint / Verify
  # -------------------------------------------------------------
  lint-springboot:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: site-metrics-springboot
    steps:
      - uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Ensure mvnw executable
        run: chmod +x mvnw

      - name: Maven Lint / Verify
        run: ./mvnw -B clean verify -DskipTests

  # -------------------------------------------------------------
  #  Security Scan (CodeQL + Multi-Language)
  # -------------------------------------------------------------
  security-scan:
    runs-on: ubuntu-latest
    needs: [lint-angular, lint-springboot] # run after linting succeeds
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: site-metrics-angular/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        working-directory: form_etl
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java, javascript, typescript, python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3